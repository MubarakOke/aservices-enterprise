"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from .. import env
from ..literals import (SECRET_KEY, DEBUG, PRODUCTION, DEFAULT_FILE_STORAGE, API_VERSION, CORS_ALLOWED_ORIGINS, DJANGO_PASSWORD_RESET_TOKEN_EXPIRATION_SECS, DJANGO_PASSWORD_RESET_PAGE, CELERY_TIMEZONE, CELERY_BACKEND, CELERY_BROKER)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
API_VERSION= env.str("API_VERSION", API_VERSION)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY', SECRET_KEY)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', DEBUG)

ALLOWED_HOSTS = ['*']

PRODUCTION = env.bool("PRODUCTION", PRODUCTION)

AUTH_USER_MODEL = 'authentication.user'

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "apps.authentication.backends.PhoneNumberAuthenticationBackend",
]

# ____________CORS_____________________
if not env.bool("CORS_ALLOW_ALL_ORIGINS", default=CORS_ALLOWED_ORIGINS):
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = env.list(
        "CORS_ALLOWED_ORIGINS",
        default=[],
    )
else:
    CORS_ALLOW_ALL_ORIGINS = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary_storage',
    'corsheaders',
    'rest_framework',
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "drf_yasg",
]

PROJECT_APPS = [
    "apps.utils",
    'apps.authentication',
    'apps.errander',
    'apps.notification'
]

INSTALLED_APPS += PROJECT_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',),
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 15,
    'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.SearchFilter', 
                                'rest_framework.filters.OrderingFilter'),
    'SEARCH_PARAM': 'q',
    'ORDERING_PARAM': 'ordering',
    
}


#Simple JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(days=1),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
    'USER_ID_FIELD': 'email'
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ___________________cloudinary storage________________
CLOUDINARY_STORAGE = {
    'CLOUD_NAME' : env.str('CLOUD_NAME'),
    'API_KEY' : env.str('CLOUDINARY_API_KEY'),
    'API_SECRET' : env.str('CLOUDINARY_API_SECRET')
}

DEFAULT_FILE_STORAGE = env.str("DEFAULT_FILE_STORAGE", DEFAULT_FILE_STORAGE)

# _______________________Swagger _________________________
SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}
    }
}

PASSWORD_RESET_TOKEN_EXPIRATION_SECS= env.int(
    "DJANGO_PASSWORD_RESET_TOKEN_EXPIRATION_SECS", DJANGO_PASSWORD_RESET_TOKEN_EXPIRATION_SECS
)

PASSWORD_RESET_PAGE= env.str("DJANGO_PASSWORD_RESET_PAGE", DJANGO_PASSWORD_RESET_PAGE)

# ________________________Celery___________________________

CELERY_BROKER = env.str("CELERY_BROKER", CELERY_BROKER)
CELERY_BROKER_URL = env.str("CELERY_BROKER", CELERY_BROKER)
CELERY_BACKEND = env.str("CELERY_BACKEND", CELERY_BACKEND)
CELERY_BACKEND_URL = env.str("CELERY_BACKEND", CELERY_BACKEND)
CELERY_TIMEZONE = env.str("CELERY_TIMEZONE", CELERY_TIMEZONE)